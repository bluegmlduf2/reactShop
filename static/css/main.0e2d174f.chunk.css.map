{"version":3,"sources":["webpack://src/index.css","webpack://src/App.css","webpack://src/Detail.scss"],"names":[],"mappings":"AACA,EACE,8BACF,CACA,EACE,aACF,CAEA,KACE,QAAS,CACT,mJAEY,CACZ,kCAAmC,CACnC,iCACF,CAEA,KACE,yEAEF,CCpBA,KACE,iBACF,CAEA,UACE,aAAc,CACd,mBACF,CAEA,8CACE,UACE,2CACF,CACF,CAEA,YACE,wBAAyB,CACzB,gBAAiB,CACjB,YAAa,CACb,qBAAsB,CACtB,kBAAmB,CACnB,sBAAuB,CACvB,4BAA6B,CAC7B,UACF,CAEA,UACE,aACF,CAKA,YACE,2DAAyC,CACzC,uBAA2B,CAC3B,UACF,CC9BA,iBAEQ,aALa,CAMb,eAAgB,CAHxB,gBAMQ,qBAAsB,CACzB,gCAYD,qBAAyB,CACzB,YAAa,CACb,iBAAkB,CAClB,eAAgB,CAChB,WAAY,CAEf,WAUG,mDAA0B,CAC7B,WAzBG,oDAA2B,CAC3B,YAAa,CACb,iBAAkB,CAClB,eAAgB,CAChB,WAAY,CA+BZ,uCACI,eAAgB","file":"main.0e2d174f.chunk.css","sourcesContent":["/* 모든 a 태그 기본 언더라인 제거 */\n*{\n  text-decoration: none!important;/*부트스트랩 때문에 important사용*/\n}\na{\n  color:#212529;\n}\n\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n",".App {\n  text-align: center;\n}\n\n.App-logo {\n  height: 40vmin;\n  pointer-events: none;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  .App-logo {\n    animation: App-logo-spin infinite 20s linear;\n  }\n}\n\n.App-header {\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n.App-link {\n  color: #61dafb;\n}\n\n/* 다른 src 폴더 등의 파일들은 리액트 앱을 발행했을 때 저절로 압축이 되는데\npublic 폴더는 리액트 앱을 발행했을 때 사이트 루트경로에 그대로 남아있습니다\n그래서 / 이렇게 경로를 입력해도 잘 먹습니다. */\n.background{\n  background-image: url(\"./background.jpg\");\n  background-position: center;\n  color: white;\n}\n","// scss파일. node-sass가 자동으로 컴파일해준다 \n// @import './_reset.css' //reset파일은 _를 붙여주고 컴파일을 피함.\n\n//1.변수를 사용가능 \n$fontColor:powderblue;\n\n//2..nesting 문법 (셀렉터 관리가 쉬움 ..굳)\ndiv.container{\n    h4{\n        color:$fontColor;\n        font-weight: 400;\n    }\n    p{\n        font-family: monospace;\n    }\n}\n\n@mixin myAlert3 {\n    background-color: #ed8e8e80;\n    padding: 15px;\n    border-radius: 5px;\n    max-width: 500px; /*500px에서 더이상 커지지않음*/\n    margin: auto; /*가운데정렬*/   \n}\n\n.my-alert{\n    background-color: #eeeeee;\n    padding: 15px;\n    border-radius: 5px;\n    max-width: 500px; /*500px에서 더이상 커지지않음*/\n    margin: auto; /*가운데정렬*/\n    // width: 100%;\n}\n\n// 3.상속해서 사용가능\n.my-alert1{\n    @extend .my-alert;\n}\n\n// 3.상속해서 사용가능\n.my-alert2{\n    @extend .my-alert;\n    background-color:#f2f225c8;\n}\n\n// 4.함수로 정의해서 사용가능\n.my-alert3{\n    @include myAlert3()\n}\n\n// 5. for문 , if문을 사용가능함\n// my-alert 1,2,3 에 적용\n@for $i from 1 to 4{\n    .my-alert#{$i} p{\n        margin-bottom: 0;\n    }\n}"]}