{"version":3,"sources":["data.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Detail","lazy","Cart","sizeContext","react","createContext","ShoeItems","props","className","to","shoeIndex","src","width","alt","shoeInfoProp","App","useState","shoeDataArr","shoeInfo","shoeInfoUpd","stockInfo","stockUpd","sizeInfo","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","map","e","i","onClick","axios","get","then","result","console","log","data","returnArr","inputArr","concat","catch","error","Provider","value","fallback","style","marginTop","detail_prop","stock_prop","stockUpd_prop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","findSameData","state","action","orderData","payload","find","store","createStore","combineReducers","reducer","type","copy","forEach","quantity","Math","sign","findData","undefined","push","alertReducer","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.24644f4b.chunk.js","sourcesContent":["/*eslint-disable*/\n//export default 변수한개만가능\nexport default [\n    {\n      id : 0,\n      title : \"White and Black\",\n      content : \"Born in France\",\n      price : 120000\n    },\n  \n    {\n      id : 1,\n      title : \"Red Knit\",\n      content : \"Born in Seoul\",\n      price : 110000\n    },\n  \n    {\n      id : 2,\n      title : \"Grey Yordan\",\n      content : \"Born in the States\",\n      price : 130000\n    }\n  ] ","/*eslint-disable*/\nimport react, { useState,lazy,Suspense } from 'react'; // import 일반(export default된거),{변수,함수\u001c} from X \nimport './App.css';\nimport { Navbar, Nav, NavDropdown, Button, Jumbotron } from 'react-bootstrap';\nimport shoeDataArr from './data.js';\nimport { Route, Link, Switch } from 'react-router-dom' /* 라우터 초기 설정 */\nimport axios from 'axios' //AJAX\n\n// import Detail from './Detail.js'; // 디테일 컴포넌트\n// import Cart from './Cart.js'; // 카트 컴포넌트\n// 레이지로딩(성능을 위해서 해당 JS를 사용할때만 임폴트함)\nlet Detail= lazy(()=>{ return import('./Detail.js')})\nlet Cart= lazy(()=>{ return import('./Cart.js')})\n\n\n\n//1.context사용선언(전역변수와비슷)\n//2.detail.js에서 import해서 사용하기때문에 export해주기\nexport let sizeContext=react.createContext()\n\nfunction App() {\n  let [shoeInfo, shoeInfoUpd] = useState(shoeDataArr) //신발 정보\n  let [stockInfo, stockUpd] = useState([1,4,5,6,10,2]) //재고 정보\n  let [sizeInfo, sizeUpd] = useState([['260','265'],['free'],['free'],['240','245'],['free'],['free']]) //사이즈 정보\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">ShoeShop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            {/* href대신에 리액트의 Link태그를 사용한다 */}\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n            {/* <Nav.Link><Link to=\"/detail\">Detail</Link></Nav.Link> 해당줄은 a태그안에 a태그를 사용하였다는 warning메세지 발생함 위와같이 수정요망 */}\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      {/*Switch 1.path가 중복되는경우 exact를 사용하지않아도 제일 위의 Route만 표시된다 */}\n      <Switch>\n        {/* 메인페이지 라우터 , exact속성은 해당 라우터가 다른 url경로에 포함되지 않도록 막는다. */}\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>20% Season OFF !!</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n          </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n          <div className=\"container\">\n            <div className=\"row\">\n              {shoeInfo.map((e, i) => {\n                //map안에서 return은 필수.안해서 꽤 헤맴\n                return (\n                  <ShoeItems shoeInfoProp={e} shoeIndex={i} key={i} />\n                )\n              })}\n            </div>\n          </div>\n          <button className=\"btn btn-primary mt-3\" onClick={() => {\n              // Ajax는 1. jQuery Ajax를 쓰든가, 2. axios 설치해서 쓰든가, 3. 쌩자바스크립트 fetch()를 쓰든가 \n              //AXIOS를 사용하면 좋은점 : JSON을 자동으로 객체로 바꿔줌. JSON.parse()를 사용할 필요가 없음\n              //json데이터가 키에 \"key\"가 있으면 아직 변환전 json문자열이다\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then((result)=>{\n                //console.log(...[1, 2, 3]) // 1, 2, 3   ES6의 신문법 Spread문법(...) // ...[벗길값] , ...{벗길값}\n                console.log(result.data)\n                let returnArr=result.data\n                let returnArr_deepCp=[...shoeInfo]//DeepCopy\n                let inputArr=returnArr_deepCp.concat(returnArr)\n\n                shoeInfoUpd(inputArr)\n\n                //한줄로 표현 \n                //ex arr1=[{1}.{2}] arr2=[{3}]  -> ...가 중괄호를 벗김 ->[{1}.{2}.{3}]이 된다\n                //[...arr1,...arr2]\n              })\n              .catch((e)=>{\n                console.error(e)\n              })\n\n              // 값보내기\n              // axios.post('https://codingapple1.github.io/shop/data2.json', { id : 'test', pw : 1234})\n              // .then((result)=>{  })\n              // .catch(()=>{ })\n          }}>더보기</button>\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          {/* context사용범위선언 */}\n          <sizeContext.Provider value={sizeInfo}>\n            {/* 1.url에 파라미터를 같이 넘기는 형식 */}\n            <Suspense fallback={<div style={{marginTop:\"10%\"}}>로딩중입니다..</div>}>  \n              <Detail detail_prop={shoeInfo} stock_prop={stockInfo} stockUpd_prop={stockUpd}/>\n            </Suspense>\n          </sizeContext.Provider>\n        </Route>\n\n        <Route path=\"/cart\">\n          <Suspense fallback={<div style={{marginTop:\"10%\"}}>로딩중입니다..</div>}>  \n            <Cart></Cart>\n          </Suspense>\n        </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nfunction ShoeItems(props) {\n  return (\n    <div className=\"col-md-4\">\n      <Link to={\"/detail/\"+props.shoeIndex}>\n      {/*1.md => 모바일사이즈  2.width=\"100%\"가 없으면 기본이미지 사이즈로 적용됨 */}\n      {/* 문자열 안에 변수넣는법 {\"a\"+b+\"c\"} */}\n      <img src={\"https://codingapple1.github.io/shop/shoes\" + ((props.shoeIndex) + 1) + \".jpg\"} width=\"100%\" alt=\"상품1\" />\n      <h4>{props.shoeInfoProp.title}</h4>\n      <p>{props.shoeInfoProp.content}</p>\n      <p>{props.shoeInfoProp.price}</p>\n      </Link>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*eslint-disable*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// 라우터 환경설정\nimport { BrowserRouter } from 'react-router-dom';//1.리액트 라우터 초기설정 2.경로없이 이름만 있으면 보통 라이브러리\n//import {HashRouter} from 'react-router-dom';//3.해시라우팅 , 라우팅시 # 해시가 포함된 url뒤의 정보는 서버에 보내지 않는다.\n\n// 리덕스 사용 이유 : 상태관리를 위함 => 큰프로젝트의 스테이트정보의 수정용이\n// 리덕스 환경설정 \nimport { Provider } from 'react-redux'\nimport { combineReducers, createStore } from 'redux'\n\n//리덕스로 공유할 값선언\n// let initState = [\n//   { id: 1, title: \"sinbal1\", color: \"red\", quantity: 4 },\n//   { id: 2, title: \"sinbal2\", color: \"red\", quantity: 5 },\n//   { id: 3, title: \"sinbal3\", color: \"red\", quantity: 6 },\n//   { id: 4, title: \"sinbal4\", color: \"red\", quantity: 7 }\n// ]\nlet initState = []\n\n\n//리덕스의 값 수정 방법을 정의 (해당 함수는 state를 반환해야함)\nfunction reducer(state = initState, action) {\n  if (action.type === \"addCartCnt\") {\n    //카트에 수량을 더하기\n    let copy = [...state]\n    copy.forEach((e) => {\n      if (e.id == action.payload) {\n        e.quantity++\n      }\n    })\n\n    return copy\n  } else if (action.type === \"minusCartCnt\") {\n    //카트에 수량을 제외하기\n    let copy = [...state]\n    //1개이상 수량 제거 가능\n    copy.forEach((e) => {\n      if (Math.sign(e.quantity) === 1 && e.quantity > 1 && e.id == action.payload) {\n        e.quantity--\n      }\n    })\n\n    return copy\n  } else if (action.type === \"addCart\") {\n    //주문정보를 카트에 추가\n    // let orderData=action.payload\n    // let copy = [...state]\n    // copy.push(orderData)\n    let findData = findSameData(state, action)\n\n    //신규 추가\n    if (findData == undefined) {\n      action.payload.quantity = 1\n      state.push(action.payload)\n    } else {\n      //기존 추가\n      findData.quantity++\n    }\n\n    return state\n  } else {\n    return state\n  }\n}\n\n//find함수를 이용해서 객체내에서 일치하는 값을 반환함 \nfunction findSameData(state, action) {\n  //주문한 값\n  let orderData = action.payload\n\n  //이미 카트에 값이 존재할 경우 (find함수,findIndex함수 둘다 사용 가능)\n  let findData = state.find((e) => {\n    return orderData.id == e.id\n  });\n\n  return findData\n}\n\n\n//리덕스로 공유할 값선언\nlet alertState = true\n\n//리덕스의 값 수정 방법을 정의 (해당 함수는 state를 반환해야함)\nfunction alertReducer(state = alertState, action) {\n  if (action.type === \"closeAlert\") {\n    return false\n  } else {\n    return state\n  }\n}\n\n//리덕스로 사용할 값 생성\nlet store = createStore(combineReducers({ reducer, alertReducer }))\n// let store = createStore(reducer)//전달값 1개인 경우\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* 라우터 사용을 위해서 BrowserRouter태그를 사용 */}\n    <BrowserRouter basename=\"/reactShop\">\n      {/* 1.Redux의 셋팅 (감싸진 애들은 props없이 state사용 가능)*/}\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}