{"version":3,"sources":["data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Stock","props","stock_prop","Detail","history","useHistory","useParams","useState","chk","chkUpd","timer","useEffect","setTimeout","clearTimeout","console","log","박스","styled","div","제목","h4","userColor","className","style","visibility","src","parseInt","width","detail_prop","stockUpd_prop","onClick","deepCopy","goBack","ShoeItems","to","shoeIndex","alt","shoeInfoProp","App","shoeDataArr","shoeInfo","shoeInfoUpd","stockInfo","stockUpd","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","map","e","i","axios","get","then","result","data","returnArr","inputArr","concat","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24a52ab1.chunk.js","sourcesContent":["/*eslint-disable*/\n//export default 변수한개만가능\nexport default [\n    {\n      id : 0,\n      title : \"White and Black\",\n      content : \"Born in France\",\n      price : 120000\n    },\n  \n    {\n      id : 1,\n      title : \"Red Knit\",\n      content : \"Born in Seoul\",\n      price : 110000\n    },\n  \n    {\n      id : 2,\n      title : \"Grey Yordan\",\n      content : \"Born in the States\",\n      price : 130000\n    }\n  ] ","/*eslint-disable*/\n//1.컴포넌트 js파일은 파일명 첫글자가 대문자이다 2.컴포넌트사용을위해 리액트라이브러리를 임포트\nimport {react,useEffect, useState} from 'react'; // let {}  = react() ..ES6의 신문법 Rest과 같다. 반환값중에 필요한 값만 변수로 선언하여 사용한다\nimport {useHistory,useParams} from 'react-router-dom'//1.페이지이동을위한 리액트 라우터 라이브러리 2.useParams 파라미터의 변수를 가져오기 위한 라이브러리\nimport styled from 'styled-components'; //1.styled-components 의 선언\nimport './Detail.scss'\n\nfunction Detail(props) {\n    let history = useHistory();//페이지이동라우터 초기화\n    let {id}=useParams();//{:파라미터..}\n    let [chk,chkUpd]=useState(true)\n    /* es6의 find를 사용한 방법\n    let 찾은상품 = props.shoes.find(function(상품){\n        return 상품.id == id\n    });\n     */\n\n    let timer=null\n\n    //HOOK 신문법. 1.컴포넌트가 등장(마운트)될때 & 재렌더링때 사용됨  //주로 AJAX통신을 넣기도함\n    useEffect(()=>{\n        //settimeOut즉시실행함수\n        timer=(function(){\n            setTimeout(()=>{\n                chkUpd(false)\n            },3000);\n        })()       \n        //return ()=>{ clearTimeout(타이머) }\n    })\n    \n    //HOOK 신문법. 2.컴포넌트가 사라질(언마운트)때 사용됨\n    useEffect(()=>{\n        return  clearTimeout(timer) //timer해제\n        // return function(){\n        //     alert('언마우트 HOOK')\n        // }\n    })\n\n    //HOOK 신문법. 3.컴포넌트가 최초 로드될때만 사용됨. 매개변수 useEffect(()=>{},[chk])는 chk가 업데이트될때 실행됨. [] 만 존재할시 최초 로드시에만 사용됨 \n    useEffect(()=>{\n        console.log(1)\n    },[])\n\n    /* styled-components를 사용하면 생기는 이점 1.CSS파일을 찾을 필요가 없다*/\n    let  박스=styled.div`\n    padding:20px;\n    `\n    let 제목=styled.h4`\n    font-size: 25px;\n    color:${props=>props.userColor}\n    `\n\n    function changestock() {\n        let deepCopy=[...props.stock_prop]\n        deepCopy[id]=parseInt(props.stock_prop[id])+1\n        props.stockUpd_prop(deepCopy)\n    }\n\n    return (\n        // 부트스트랩 레이아웃기본, 1.container > 2.row 3.mt은 마진탑 \n        <div className=\"container\">\n            <박스>\n                <제목 userColor={\"gray\"}>\n                    Detail\n                </제목>\n            </박스>\n            \n            {/* 아래의 if 문 사용이 좋은 관습 */}\n            <div className=\"my-alert1\" style={chk?{visibility:\"visible\"}:{visibility:\"hidden\"}}>\n                <p>재고가 얼마 남지 않았습니다</p>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <img src={\"https://codingapple1.github.io/shop/shoes\"+(parseInt(id)+1)+\".jpg\"} width=\"100%\" />\n                </div>\n                <div className=\"col-md-6 mt-4\">\n                    <h4 className=\"pt-5\">{props.detail_prop[id].title}</h4>\n                    <p>{props.detail_prop[id].content}</p>\n                    <p>{props.detail_prop[id].price}원</p>\n                    <Stock stock_prop={props.stock_prop[id]} stockUpd_prop={props.stockUpd_prop}/>\n                    <button className=\"btn btn-danger\" onClick={changestock}>주문하기</button>\n                    <button className=\"btn btn-danger ml-2\" onClick={()=>{\n                        history.goBack()//뒤로가기\n                        //history.push('/')//해당 url로이동\n                    }}>뒤로가기</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction Stock(props) {\n    return (\n        <p>재고 : {props.stock_prop}</p>\n    );    \n}\n\n// HOOK -> Trriger\n// class Detail2 extends React.Component {\n//     componentDidMount(){\n//       //Detail2 컴포넌트가 Mount 되고나서 실행할 코드\n//     }\n//     componentWillUnmount(){\n//       //Detail2 컴포넌트가 Unmount 되기전에 실행할 코드\n//     }\n//   }\nexport default Detail","/*eslint-disable*/\nimport react, { useState } from 'react';\nimport './App.css';\nimport { Navbar, Nav, NavDropdown, Button, Jumbotron } from 'react-bootstrap';\nimport shoeDataArr from './data.js';\nimport Detail from './Detail.js'; // 디테일 컴포넌트\nimport { Route, Link, Switch } from 'react-router-dom' /* 라우터 초기 설정 */\nimport axios from 'axios' //AJAX\n\nfunction App() {\n  let [shoeInfo, shoeInfoUpd] = useState(shoeDataArr) //신발 정보\n  let [stockInfo, stockUpd] = useState([1,4,5,6,10,2]) //재고 정보\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">ShoeShop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            {/* href대신에 리액트의 Link태그를 사용한다 */}\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n            {/* <Nav.Link><Link to=\"/detail\">Detail</Link></Nav.Link> 해당줄은 a태그안에 a태그를 사용하였다는 warning메세지 발생함 위와같이 수정요망 */}\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      {/*Switch 1.path가 중복되는경우 exact를 사용하지않아도 제일 위의 Route만 표시된다 */}\n      <Switch>\n        {/* 메인페이지 라우터 , exact속성은 해당 라우터가 다른 url경로에 포함되지 않도록 막는다. */}\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>20% Season OFF !!</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n          </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n          <div className=\"container\">\n            <div className=\"row\">\n              {shoeInfo.map((e, i) => {\n                //map안에서 return은 필수.안해서 꽤 헤맴\n                return (\n                  <ShoeItems shoeInfoProp={e} shoeIndex={i} key={i} />\n                )\n              })}\n            </div>\n          </div>\n          <button className=\"btn btn-primary mt-3\" onClick={() => {\n              // Ajax는 1. jQuery Ajax를 쓰든가, 2. axios 설치해서 쓰든가, 3. 쌩자바스크립트 fetch()를 쓰든가 \n              //AXIOS를 사용하면 좋은점 : JSON을 자동으로 객체로 바꿔줌. JSON.parse()를 사용할 필요가 없음\n              //json데이터가 키에 \"key\"가 있으면 아직 변환전 json문자열이다\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then((result)=>{\n                //console.log(...[1, 2, 3]) // 1, 2, 3   ES6의 신문법 Spread문법(...) // ...[벗길값] , ...{벗길값}\n                console.log(result.data)\n                let returnArr=result.data\n                let returnArr_deepCp=[...shoeInfo]//DeepCopy\n                let inputArr=returnArr_deepCp.concat(returnArr)\n\n                shoeInfoUpd(inputArr)\n\n                //한줄로 표현 \n                //ex arr1=[{1}.{2}] arr2=[{3}]  -> ...가 중괄호를 벗김 ->[{1}.{2}.{3}]이 된다\n                //[...arr1,...arr2]\n              })\n              .catch((e)=>{\n                console.error(e)\n              })\n\n              // 값보내기\n              // axios.post('https://codingapple1.github.io/shop/data2.json', { id : 'test', pw : 1234})\n              // .then((result)=>{  })\n              // .catch(()=>{ })\n          }}>더보기</button>\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          {/* 1.url에 파라미터를 같이 넘기는 형식 */}\n          <Detail detail_prop={shoeInfo} stock_prop={stockInfo} stockUpd_prop={stockUpd}/>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction ShoeItems(props) {\n  return (\n    <div className=\"col-md-4\">\n      <Link to={\"/detail/\"+props.shoeIndex}>\n      {/*1.md => 모바일사이즈  2.width=\"100%\"가 없으면 기본이미지 사이즈로 적용됨 */}\n      {/* 문자열 안에 변수넣는법 {\"a\"+b+\"c\"} */}\n      <img src={\"https://codingapple1.github.io/shop/shoes\" + ((props.shoeIndex) + 1) + \".jpg\"} width=\"100%\" alt=\"상품1\" />\n      <h4>{props.shoeInfoProp.title}</h4>\n      <p>{props.shoeInfoProp.content}</p>\n      <p>{props.shoeInfoProp.price}</p>\n      </Link>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*eslint-disable*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';//1.리액트 라우터 초기설정 2.경로없이 이름만 있으면 보통 라이브러리\n//import {HashRouter} from 'react-router-dom';//3.해시라우팅 , 라우팅시 # 해시가 포함된 url뒤의 정보는 서버에 보내지 않는다.\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* 라우터 사용을 위해서 BrowserRouter태그를 사용 */}\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}